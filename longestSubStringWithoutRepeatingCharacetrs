/**
 * @param {string} s
 * @return {number}
 */
var lengthOfLongestSubstring = function(s) {
  let maxLength = 0; // Length of the longest substring
  let start = 0; // Start index of the current substring
  const charMap = {}; // Map to track character occurrences

  for (let end = 0; end < s.length; end++) {
    const currentChar = s[end];

    // If currentChar is already in the substring, update the start index
    if (charMap[currentChar] !== undefined && charMap[currentChar] >= start) {
      start = charMap[currentChar] + 1;
    }

    // Update the character's last occurrence index
    charMap[currentChar] = end;

    // Update the maximum length if needed
    maxLength = Math.max(maxLength, end - start + 1);
  }

  return maxLength;
};
